package currencyConverter;

/** 
 Clase, principal, maneja la logica del draw del GUI asi como la accion del boton
 Interfaz grafica generado en su mayor parte con la utilidad para interfaces de NetBEANS
 Consiste de un frame y un panel principal dentro del cual se encuentran los demas elementos:
 Un textfield para input de usuario
 Dos textarea para output de programa
 Un boton para realizar el calculo
 Dos combobox para seleccionar la moneda origen y destion
 */
public class CRUnion extends javax.swing.JFrame {


    public CRUnion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        framePrincipal = new javax.swing.JPanel();
        tituloFrame = new javax.swing.JLabel();
        textoCantidadMoneda = new javax.swing.JTextField();
        descripcionCantidadMoneda = new javax.swing.JLabel();
        seleccionMonedaOrigen = new javax.swing.JComboBox<>();
        seleccionMonedaDestino = new javax.swing.JComboBox<>();
        botonCalcular = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        transaccionesHistorial = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        transaccionReciente = new javax.swing.JTextArea();
        descripcionMonedaOrigen = new javax.swing.JLabel();
        descripcionMonedaDestino = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        framePrincipal.setBackground(new java.awt.Color(255, 255, 255));


        tituloFrame.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tituloFrame.setForeground(new java.awt.Color(0, 0, 0));
        tituloFrame.setText("Calculadora de conversiones monetarias");

        textoCantidadMoneda.setBackground(new java.awt.Color(225, 225, 225));

        descripcionCantidadMoneda.setForeground(new java.awt.Color(0, 0, 0));
        descripcionCantidadMoneda.setText("Cantidad a cambiar");

        seleccionMonedaOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dolar Estadounidense", "Euros", "Colones", "Pesos Mexicanos", "Cordobas Oro", "Pesos Argentinos", "Libra Esterlina", "Yen" }));

        seleccionMonedaDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dolar Estadounidense", "Euros", "Colones", "Pesos Mexicanos", "Cordobas Oro", "Pesos Argentinos", "Libra Esterlina", "Yen" }));

        botonCalcular.setText("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        transaccionesHistorial.setEditable(false);
        transaccionesHistorial.setBackground(new java.awt.Color(225, 225, 225));
        transaccionesHistorial.setColumns(20);
        transaccionesHistorial.setRows(5);
        jScrollPane1.setViewportView(transaccionesHistorial);

        transaccionReciente.setEditable(false);
        transaccionReciente.setBackground(new java.awt.Color(225, 225, 225));
        transaccionReciente.setColumns(80);
        transaccionReciente.setRows(5);
        jScrollPane2.setViewportView(transaccionReciente);

        descripcionMonedaOrigen.setForeground(new java.awt.Color(0, 0, 0));
        descripcionMonedaOrigen.setText("Moneda Origen");

        descripcionMonedaDestino.setForeground(new java.awt.Color(0, 0, 0));
        descripcionMonedaDestino.setText("Moneda Destino");

        javax.swing.GroupLayout framePrincipalLayout = new javax.swing.GroupLayout(framePrincipal);
        framePrincipal.setLayout(framePrincipalLayout);
        framePrincipalLayout.setHorizontalGroup(
            framePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePrincipalLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(tituloFrame)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(framePrincipalLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(framePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(framePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(seleccionMonedaOrigen, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textoCantidadMoneda, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(descripcionCantidadMoneda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seleccionMonedaDestino, javax.swing.GroupLayout.Alignment.LEADING, 0, 170, Short.MAX_VALUE)
                        .addComponent(botonCalcular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(framePrincipalLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(framePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(descripcionMonedaOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(descripcionMonedaDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        framePrincipalLayout.setVerticalGroup(
            framePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePrincipalLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(framePrincipalLayout.createSequentialGroup()
                .addComponent(tituloFrame)
                .addGap(95, 95, 95)
                .addComponent(textoCantidadMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcionCantidadMoneda)
                .addGap(104, 104, 104)
                .addComponent(seleccionMonedaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcionMonedaOrigen)
                .addGap(78, 78, 78)
                .addComponent(seleccionMonedaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcionMonedaDestino)
                .addGap(93, 93, 93)
                .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        getContentPane().add(framePrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        

    // Logica que agrega la funcionalidad al boton del GUI
    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {   
        monedaOrigen = seleccionMonedaOrigen.getSelectedItem().toString().toLowerCase();
        monedaDestino = seleccionMonedaDestino.getSelectedItem().toString().toLowerCase();

        //Variable usada para guardar temporalmente el string procesado
        transaccionStringTmp = "";

        /**
         Este Try statement maneja la logica principal de GUI  y a su vez realiza el checkeo de la cantidad introducida
         Maneja las excepciones dependiendo de si la cantidad es un float, si es negativa o en el caso de ser 0 no realiza ningun calculo adicional y solo imprime 0 = 0
         */
        try {
            cantidadMonedaInicial = Float.parseFloat(textoCantidadMoneda.getText());

            if (cantidadMonedaInicial == 0) {
                // Escenario cuando cantidadMonedaIncial = 0
                transaccionStringTmp = String.format("%.2f %s equivalen a 0.00 %s", cantidadMonedaInicial, monedaOrigen, monedaDestino);
                transaccionReciente.setText(transaccionStringTmp);
                transaccionesHistorial.append(transaccionStringTmp + NEWLINE);

            } else if (cantidadMonedaInicial < 0) {
                // Escenario cuando cantidad de moneda incial es negativa
                transaccionReciente.setText(String.format("%.2f es una cantidad ilegal (no se admiten numeros negativos)", cantidadMonedaInicial));

            } else {
                /**
                 Escenario cuando la cantidad es valida y diferente de 0.
                 Imprime el calculo en la pantalla de la transaccion actual y tambien imprime la transaccion al historial de transaciones para visibilidad
                 */
                cantidadMonedaFinal = conversion.ConversionMonedas(cantidadMonedaInicial, monedaOrigen, monedaDestino);
                transaccionStringTmp = String.format("%.2f %s equivalen a %.2f %s", cantidadMonedaInicial, monedaOrigen, cantidadMonedaFinal, monedaDestino);
                transaccionReciente.setText(transaccionStringTmp);
                transaccionesHistorial.append(transaccionStringTmp + NEWLINE);

            }
        } catch (java.lang.NumberFormatException ex) {
            /**
             Atrapa la excepcion en casos donde cantidadMonedaInicial no puede ser parseado como un float
             Imprime la excepcion a la consola usando el logger y tambien muestra un mensaje al usuario
             */
            transaccionReciente.setText(String.format("\"%s\" es una cantidad ilegal", textoCantidadMoneda.getText()));
            java.util.logging.Logger.getLogger(CRUnion.class.getName()).log(java.util.logging.Level.WARNING, null, ex);

        }
        // Reinicia el cuadro de texto de input
        textoCantidadMoneda.setText("");
    }     
                             

    // Codigo generado por NetBEANS IDE
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUnion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUnion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUnion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUnion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUnion().setVisible(true);
            }
        });
    }

    // Declaracion de variables provadas                     
    private javax.swing.JButton botonCalcular;
    private javax.swing.JLabel descripcionCantidadMoneda;
    private javax.swing.JLabel descripcionMonedaDestino;
    private javax.swing.JLabel descripcionMonedaOrigen;
    private javax.swing.JPanel framePrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> seleccionMonedaDestino;
    private javax.swing.JComboBox<String> seleccionMonedaOrigen;
    private javax.swing.JTextField textoCantidadMoneda;
    private javax.swing.JLabel tituloFrame;
    private javax.swing.JTextArea transaccionReciente;
    private javax.swing.JTextArea transaccionesHistorial;
    private String transaccionStringTmp;
    private String monedaOrigen;
    private String monedaDestino;
    private float cantidadMonedaFinal;
    private float cantidadMonedaInicial;
    private final static String NEWLINE = "\n";
}
